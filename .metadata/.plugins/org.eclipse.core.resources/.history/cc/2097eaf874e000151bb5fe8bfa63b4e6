package com.leetCode._2th;
/**
 * There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Note:
The solution is guaranteed to be unique.
 * 
 * @author Zealot
 * @date 2016年3月2日 下午8:42:44 
 *
 */
public class GasStation {
	public int canCompleteCircuit(int[] gas, int[] cost) {
		int size = gas.length;
		int cur = 0;
        boolean[] a = new boolean[size];
        
        for(int start = 0; start < size; start++) {
        	for(int i = start; a[i] == false; i++) {
        		cur = cur+gas[i] - cost[i];
        		if(cur<0){
        			a= new boolean[size];
        			cur = 0;
        			break;
        		}
        		a[i] = true;
        		if(i==size-1){
        			i=0;
        		}
        	}
        	return start;
        }
		
		
		return -1;
    }
	public static void main(String[] args) {
		boolean[] a = new boolean[2];
		System.out.println(a[1]);
		
	}
}
