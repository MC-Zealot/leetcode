package com.leetCode;

/**
 * Given n non-negative integers representing an elevation map where the width
 * of each bar is 1, compute how much water it is able to trap after raining.
 * 
 * For example, Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.
 * 
 * @author Zealot
 * @date 2015年9月14日 下午8:07:23
 */
public class TrappingRainWater {
	public int trap(int[] height) {

		//1、找到顶峰，大于前一个，大于后一个
		for(int i = 1; i < height.length-1; i ++) {
			if(height[i-1]<height[i]&&height[i]>height[i+1]){
				for(int j = i+1; j < height.length; j++) {
					if(height[j-1]<height[j]&&height[j]>height[j+1]){
//						i,j都得到了
//						计算水量
						i=j;
					}
				}
			}
			
		}
		
		int a = -1;
		//找到第一个点
		int x = 0;
		if(height[0]>height[1]){
			a = 0;
		}else{
			for(x = 1; x < height.length; x++) {
				if(height[x-1]<height[x]&&height[x]>height[x+1]){
					a=x;
				}
			}
		}
		//接着找第二个点
		for(int i = x + 1; i < height.length; i++){
			if(height[i-1]<height[i]&&height[i]>height[i+1]){
//				a -> i;
//					计算水量
				for(; a< x; a++) {
					
				}
			}
		}
		//2、计算蓄水量
		return 0;
	}
}
